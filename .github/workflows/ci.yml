name: Publish Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install cosign (skip on PR)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2.2.4

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Docker login (skip on PR)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Build Docker images via compose
      - name: Build Docker images
        run: docker-compose build

      # 6. Run containers and wait for healthcheck
      - name: Start containers and wait for health
        run: |
          docker-compose up -d
          echo "Waiting for services to become healthy..."
          for service in deploy-app deploy-postgres; do
            for i in {1..12}; do
              status=$(docker inspect --format='{{.State.Health.Status}}' $(docker-compose ps -q $service))
              echo "$service health: $status"
              if [ "$status" = "healthy" ]; then
                break
              fi
              sleep 5
            done
          done

      # 7. Push Docker image (skip on PR)
      - name: Push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # 8. Sign the published Docker image (skip on PR)
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        run: cosign sign --yes $TAGS

      # 9. Stop and remove containers
      - name: Stop containers
        if: always()
        run: docker-compose down
